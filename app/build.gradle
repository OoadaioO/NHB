apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        applicationId "com.nhb.app.custom"
        minSdkVersion 15
        targetSdkVersion 22
        versionCode getSelfDefinedVersion("code")
        versionName getSelfDefinedVersion("name")
        multiDexEnabled true
    }

    signingConfigs {
        debug {
            storeFile file("../nhb.jks")
            storePassword "nianhuibao123321"
            keyAlias "nhb"
            keyPassword "nianhuibao123321"
        }
        release {
            storeFile file("../nhb.jks")
            storePassword "nianhuibao123321"
            keyAlias "nhb"
            keyPassword "nianhuibao123321"
        }
    }

    buildTypes {
        debug {
            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
            // 是否进行混淆
            minifyEnabled false
            // Zipalign优化
            zipAlignEnabled false
            // 移除无用的resource文件
            shrinkResources false
            // 签名设置
            signingConfig signingConfigs.debug
        }
        release {
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"
            // 是否进行混淆
            minifyEnabled false
            // 是否zip对齐
            zipAlignEnabled false
            // 是否移除无用的resource文件
            shrinkResources false
            // 签名设置
            signingConfig signingConfigs.release
            // 混淆文件的位置
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }

    lintOptions {
        abortOnError false
    }

    dexOptions {
        incremental true
        javaMaxHeapSize "4g"
    }

    sourceSets {
        main() {
            jniLibs.srcDirs = ['libs']
        }
    }

    // 整理打完的包
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.outputFile = new File(
                    output.outputFile.parent, "NianHuiBao_V${defaultConfig.versionName}_${variant.productFlavors.name}.apk")
        }
    }

    // 执行lint检查，有任何的错误或者警告提示，都会终止构建，我们可以将其关掉。
    lintOptions {
        abortOnError false
    }
    // 统一修改多渠道
    productFlavors.all { flavor ->
        flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }
    // 友盟多渠道打包
    productFlavors {
//        tencent {}
        mi {}
//        baidu {}
//        qihoo {}
//        meizu {}
//        _91 {}
//        hiapk {}
//        oppo {}
//        anzhi {}
//        huawei {}
//        lenovo {}
//        peapods {}
//        other {}
//        appinside {}
//        googleplay {}
//        innertest {}
//        H5 {}
//        share {}
//        jinli {}
//        pp {}
//        Nduo {}
//        bobao {}
    }

    dexOptions {
        incremental true
        javaMaxHeapSize "4g"
    }
}

allprojects {
    repositories {
        jcenter()
        flatDir {
            dirs 'libs'
        }
        mavenCentral()
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:recyclerview-v7:23.3.0'
    compile 'com.android.support:design:23.4.0'
    compile 'com.android.support:cardview-v7:23.4.0'
    compile 'com.squareup.retrofit2:retrofit:2.0.2'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.2'
    compile 'com.squareup.okhttp3:okhttp-urlconnection:3.2.0'
    // 图片加载库
    compile 'com.squareup.picasso:picasso:2.5.2'
    // 适配Picasso2的OkHttp3 downloader
    compile 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.0.2'
    //FlycoTabLayout
    compile 'com.flyco.tablayout:FlycoTabLayout_Lib:2.0.6@aar'
    compile 'com.pgyersdk:sdk:2.4.0'
    //PickerView
    compile 'cn.qqtheme.framework:WheelPicker:latest.release'
    compile project(':library')
    //Frame
    compile project(':frame')
    compile project(':pulltorefresh')
    compile files('libs/SMSSDK-2.1.1.jar')
    compile project(':pingpp')
    compile files('libs/alipaySdk-20160223.jar')
    compile files('libs/cmbkeyboard.jar')
    compile files('libs/libammsdk.jar')
    compile files('libs/libpingpp-2.1.4.jar')
    compile files('libs/UPPayAssistEx.jar')
    compile files('libs/UPPayPluginExPro.jar')
    provided files('libs/GetuiSDK2.9.0.0.jar')
}
def getSelfDefinedVersion(type) {
    if ("code".equals(type)) {
        Integer.parseInt(new Date().format("yyyyMMddss"))
    } else if ("name".equals(type)) {
        "1.1"
    }
}
